// Generated by view binder compiler. Do not edit!
package com.schema.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.kizitonwose.calendar.view.CalendarView;
import com.schema.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnPastEvents;

  @NonNull
  public final Button btnToggleView;

  @NonNull
  public final LinearLayout calendarContainer;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final FloatingActionButton fabAddEvent;

  @NonNull
  public final FloatingActionButton fabSettings;

  @NonNull
  public final LinearLayout listContainer;

  @NonNull
  public final RecyclerView recyclerviewEvents;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull Button btnPastEvents,
      @NonNull Button btnToggleView, @NonNull LinearLayout calendarContainer,
      @NonNull CalendarView calendarView, @NonNull FloatingActionButton fabAddEvent,
      @NonNull FloatingActionButton fabSettings, @NonNull LinearLayout listContainer,
      @NonNull RecyclerView recyclerviewEvents) {
    this.rootView = rootView;
    this.btnPastEvents = btnPastEvents;
    this.btnToggleView = btnToggleView;
    this.calendarContainer = calendarContainer;
    this.calendarView = calendarView;
    this.fabAddEvent = fabAddEvent;
    this.fabSettings = fabSettings;
    this.listContainer = listContainer;
    this.recyclerviewEvents = recyclerviewEvents;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_past_events;
      Button btnPastEvents = ViewBindings.findChildViewById(rootView, id);
      if (btnPastEvents == null) {
        break missingId;
      }

      id = R.id.btn_toggle_view;
      Button btnToggleView = ViewBindings.findChildViewById(rootView, id);
      if (btnToggleView == null) {
        break missingId;
      }

      id = R.id.calendar_container;
      LinearLayout calendarContainer = ViewBindings.findChildViewById(rootView, id);
      if (calendarContainer == null) {
        break missingId;
      }

      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.fab_add_event;
      FloatingActionButton fabAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (fabAddEvent == null) {
        break missingId;
      }

      id = R.id.fab_settings;
      FloatingActionButton fabSettings = ViewBindings.findChildViewById(rootView, id);
      if (fabSettings == null) {
        break missingId;
      }

      id = R.id.list_container;
      LinearLayout listContainer = ViewBindings.findChildViewById(rootView, id);
      if (listContainer == null) {
        break missingId;
      }

      id = R.id.recyclerview_events;
      RecyclerView recyclerviewEvents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewEvents == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, btnPastEvents, btnToggleView,
          calendarContainer, calendarView, fabAddEvent, fabSettings, listContainer,
          recyclerviewEvents);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
